from odoo import models, api, _, fields

class LegereOrder(models.Model):
    _name = "legere.order"
    _description = "Orders"
    _rec_name = "OrderNumber"

    OrderNumber = fields.Char(string='OrderNumber', required=True)
    OrigCompany = fields.Integer(string='OrigCompany')
    BillToName = fields.Char(string='BillToName')
    BillToAddress = fields.Char(string='BillToAddress')
    DoctorsName = fields.Char(string='Doctors Name')
    BillToCity = fields.Char(string='BillToCity')
    BillToZip = fields.Char(string='BillToZip')
    BillToState = fields.Char(string='BillToState')
    ShipToName = fields.Char(string='ShipToName')
    ShipToAddress = fields.Char(string='ShipToAddress')
    ShipToAddress2 = fields.Char(string='ShipToAddress2')
    ShipToCity = fields.Char(string='ShipToCity')
    ShipToState = fields.Char(string='ShipToState')
    ShipToZip = fields.Char(string='ShipToZip')
    OneTimeOnly = fields.Boolean(string='One Time Only')
    CustTelephone = fields.Char(string='Cust Telephone')
    PurchaseOrderNumber = fields.Char(string='Purchase Order Number')
    CreditStatus = fields.Char(string='Credit Status')
    Terms = fields.Char(string='Terms')
    PrepaidCheckNumber = fields.Char(string='Prepaid Check Number')
    CreditCardNumber = fields.Char(string='Credit Card Number')
    CCExpDate = fields.Char(string='CCExpDate')
    WithOrderNumber = fields.Char(string='With Order Number')
    CreditLimit = fields.Float(string='Credit Limit')
    LicenseNumber = fields.Char(string='License Number')
    LicenseExpiration = fields.Date(string='License Expiration')
    DEANumber = fields.Char(string='DEA Number')
    DEAExpiration = fields.Date(string='DEA Expiration')
    TypeOfNameChange = fields.Char(string='Type of Name Change')
    ChangeData = fields.Char(string='Change Data')
    FaxNumber = fields.Char(string='Fax Number')
    VerifiedBy = fields.Char(string='Verified By')
    DateOrderEntered = fields.Datetime(string='Date Order Entered')
    ShippingType = fields.Char(string='Shipping Type')
    ShippingCharges = fields.Float(string='Shipping Charges')
    CODCharge = fields.Float(string='COD Charge')
    COD = fields.Boolean(string='COD')
    CODCash = fields.Float(string='COD Cash')
    OrderTotal = fields.Float(string='Order Total')
    AddBalanceToCOD = fields.Float(string='Add Balance to COD')
    CODTotal = fields.Float(string='COD Total')
    FilledBy = fields.Char(string='Filled By')
    InspectedBy = fields.Char(string='Inspected By')
    DateShipped = fields.Date(string='Date Shipped')
    OrderedBy = fields.Char(string='Ordered By')
    TakenBy = fields.Char(string='Taken By')
    Status = fields.Char(string='Status')
    ReasonPending = fields.Char(string='Reason Pending')
    DoctorName = fields.Char(string='Doctor Name')
    DoctorType = fields.Char(string='Doctor Type')
    LegereUserId = fields.Integer(string='Legere UserId')
    OrderUID = fields.Char(string='OrderUID')
    Subtotal = fields.Float(string='Subtotal')
    PhoneNumber = fields.Char(string='Phone Number')
    Territory = fields.Integer(string='Territory')
    CustInternalNumber = fields.Integer(string='Cust Internal Number')
    HandlingCharge = fields.Float(string='Handling Charge')
    LegereCustomerNumber = fields.Char(string='Customer Number')
    AccountStatus = fields.Char(string='Account Status')
    Source = fields.Char(string='Source')
    SpecialInstructions = fields.Text(string='Special Instructions')
    InvoiceNumber = fields.Char(string='Invoice Number')
    SpecialPricing = fields.Boolean(string='Special Pricing')
    ShowOnReports = fields.Boolean(string='ShowOnReports')
    TrackingNumber = fields.Char(string='Tracking Number')
    NPINumber = fields.Char(string='NPI Number')
    OlympiaNum = fields.Char(string='Olympia Num')
    PendingCat = fields.Char(string='Pending Cat')
    OrderParts = fields.One2many('legere.order.part', 'OrderID', string='Order Parts')
    InvoiceCount = fields.Integer(string='Invoices', compute='_compute_invoice_count')

    def _compute_invoice_count(self):
        for record in self:
            record.InvoiceCount = len(self.env['legere.invoice'].search([('InvoiceNumber', '=', record.InvoiceNumber)]))

    def action_view_legere_invoices(self):
        self.ensure_one()
        action = self.env["ir.actions.actions"]._for_xml_id("legere_legacy.action_legere_invoice")
        action['domain'] = [
            ('InvoiceNumber', '=', self.InvoiceNumber)
        ]
        return action

class LegereOrderPart(models.Model):
    _name = "legere.order.part"
    _description = "Order Parts"

    OrderUID = fields.Char(string='OrderUID')
    OrderID = fields.Many2one('legere.order', string='OrderID', ondelete='cascade')
    DateOrderEntered = fields.Datetime(string='Date Order Entered', related='OrderID.DateOrderEntered', store=True)
    ProductNumber = fields.Char(string='Product Number')
    product_id = fields.Many2one('product.product', string='Product')
    QtyOrdered = fields.Float(string='Qty Ordered')
    PrivateLabel = fields.Boolean(string='Private Label')
    Sample = fields.Boolean(string='Sample')
    PriceBreak = fields.Boolean(string='Price Break')
    NewProduct = fields.Boolean(string='New Product')
    PriceChanged = fields.Boolean(string='Price Changed')
    UnitPrice = fields.Float(string='Unit Price')
    Total = fields.Float(string='Total')
    UniqueID = fields.Integer(string='UniqueID')
    ProductDescription = fields.Char(string='Product Description')
    CustInternalNumber = fields.Integer(string='CustInternal Number')
    SalesPersonId = fields.Integer(string='SalesPersonId')
    Size = fields.Char(string='Size')
    Territory = fields.Integer(string='Territory')
    QtyShipped = fields.Float(string='Qty Shipped')
    CommissionCode = fields.Char(string='Commission Code')